# tabs and spacing matter in this file.
version: "3"
# A service is a container
services:
  api:
    build: .
  # The outside world need to be able to speak to our container, so we need to open up a port
    ports:
      #- <port on localhost(any open port)>:<port on container(same as in Dockerfile)>
      - 80:80
    environment:
      - DATABASE_HOSTNAME=postgres #143.244.157.61
      - DATABASE_PASSWORD=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=fastapi
      - DATABASE_USERNAME=postgres
      - SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
  # setting up a container for our database
  postgres:
    image: postgres
    environment:
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=fastapi
    # Every time we lose connection to the container we will lose the data stored in it. We can mitigate this by creating a volume... This allows us to save data from the container to our local machine.
    volumes:
      - postgres-db:/var/lib/postgresql/data # This is where data is stored in our container

volumes:
  postgres-db:

# docker-compose up -d
# docker ps -a # ...see if it crashed
# docker logs fastapi-api-1

# docker-compose down (tears everythig down)
# docker-compose up -d --build  # forces rebuild

# Ok so I spent a whole weekens trying to get docker to work. In the end I did 2 things differently to what Sanjeev did. Firstly I changed the ports to 80 from 8000 (although I dont think this is whst solved the problem). Th other thing I did was to change the hostname of the database from localhost to the IP address of my Ubuntu server.
#... Onto th next section I chnaged the IP address to 'postgres' and this now worked fine... wierd.